.agenda-mainSection {
  height: 100%;
  overflow: hidden;
}

.agendaMain {
  height: 100%;
}

.theatreMain {
  height: calc(100%);
  overflow: auto;
}

.sidebar-agenda-inner {
  height: calc(100% - 144px);
}

.sidebar-music-inner {
  height: 100%;
  overflow: auto;
  margin: 0;
  padding: 0;
}

.sidebar-music-inner::-webkit-scrollbar {
  display: none;
}

.agendaItem {
  display: flex;
  flex-direction: column;
  gap: 8px;
  align-items: flex-start;
  max-width: 100%;
}

.affiche {
  width: 100%;
}

.textPart {
  width: 100%;
  color: var(--text-color);
}

.textPart h3 {
  margin-top: 0;
}

.textPart .description a {
  color: var(--light);
}

.spec-image {
  max-width: 100%;
  max-height: 100%;
  object-fit: cover;
}

.description {
  font-weight: 400;
  color: var(--dark);
}

.spec-title {
  font-family: var(--font-title);
  font-size: 32px;
  letter-spacing: 0.05em;
  font-weight: 400;
  padding-top: 0px;
}

.spec-date {
  padding: 4px 0;
}

.spec-place {
  font-size: 18px;
}

.spec-video {
  width: 100%;
  padding-top: 52px;
}

.videoPart {
  width: 100%;
  overflow: hidden;
}

.ctd-itemImage {
  max-height: 200px;
  max-width: 200px;
}

.alt-gridder {
  color: var(--midnight);
}

.alt-itemImage {
  width: 200px;
}

.item-info {
  padding: 0;
  width: 100%;
  font-size: 14px;
}

.item-distribution {
  padding: 8px 0;
}

.fhImage {
  max-width: 100vw;
  max-height: 100vh;
}

.imageRow {
  padding: 24px 8px 8px;
  display: flex;
  width: 100%;
  overflow: auto;
}

.item-image-main {
  max-width: 80%;
  max-height: 350px;
}

.thumbImage {
  max-width: 100px;
  max-height: 100px;
}

.rotateLeft {
  transform: rotate(4deg);
}

.rotateRight {
  transform: rotate(-8deg);
}

.mp3Extrait {
  display: none;
  align-items: center;
  gap: 8px;
  cursor: pointer;
}

.mp3Extrait:active {
  opacity: 50%;
}

.mobileMp3 {
  padding-top: 8px;
  width: 100%;
}

.mobileMp3 audio {
  width: 90%;
}

.alt-videoPart {
  padding-top: 16px;
}

// ItemMapper CTD ALT

.ReactModal__Overlay {
  opacity: 0;
  transition: opacity 200ms ease-in-out;
}

.ReactModal__Overlay--after-open {
  opacity: 1;
}

.ReactModal__Overlay--before-close {
  opacity: 0;
}
